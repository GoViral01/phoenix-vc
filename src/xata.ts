// Generated by Xata Codegen 0.29.4. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "Founders",
    columns: [
      { name: "first_name", type: "string" },
      { name: "last_name", type: "string" },
      { name: "email", type: "email", unique: true },
      { name: "phone_number", type: "string" },
      { name: "location", type: "string" },
      { name: "linkedIn", type: "string" },
      { name: "twitter", type: "string" },
      { name: "instagram", type: "string" },
      { name: "facebook", type: "string" },
      { name: "startup_name", type: "string" },
      { name: "website", type: "string" },
      { name: "business_overview", type: "text" },
      { name: "elevator_pitch", type: "string" },
      { name: "business_linkedIn", type: "string" },
      { name: "business_twitter", type: "string" },
      { name: "business_instagram", type: "string" },
      { name: "pitch_deck", type: "file[]" },
      { name: "business_stage", type: "string" },
      { name: "niche", type: "string" },
      { name: "business_highlights", type: "string" },
      { name: "investment_sought", type: "string" },
      { name: "premoney_valuation", type: "string" },
      { name: "other_niche", type: "string" },
    ],
  },
  {
    name: "Investors",
    columns: [
      { name: "first_name", type: "string" },
      { name: "last_name", type: "string" },
      { name: "contact_number", type: "string" },
      { name: "email", type: "email" },
      { name: "address", type: "string" },
      { name: "linkedIn", type: "string" },
      { name: "background", type: "string" },
    ],
  },
  {
    name: "portfolio",
    columns: [
      { name: "companyName", type: "string" },
      { name: "description", type: "string" },
      { name: "websiteUrl", type: "string" },
      { name: "imageUrl", type: "file" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Founders = InferredTypes["Founders"];
export type FoundersRecord = Founders & XataRecord;

export type Investors = InferredTypes["Investors"];
export type InvestorsRecord = Investors & XataRecord;

export type Portfolio = InferredTypes["portfolio"];
export type PortfolioRecord = Portfolio & XataRecord;

export type DatabaseSchema = {
  Founders: FoundersRecord;
  Investors: InvestorsRecord;
  portfolio: PortfolioRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Fathi-Babayeju-s-workspace-6d1igb.us-east-1.xata.sh/db/phoenix-vc",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
